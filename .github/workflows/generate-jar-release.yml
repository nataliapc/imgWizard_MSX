name: Generate JAR (Create - Upload)

env:
  # The name of the Play Store
  main_name: imgWizard

on:

  push:
    tags:
      - 'version_*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'
          cache: gradle

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Run Tests Build
      - name: Run gradle tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

      # Create APK Release
      - name: Build JAR release project
        run: ./gradlew jar

      # Upload Artifact Build
      # Noted For Output [main_project_module]/build/libs/
      - name: Upload JAR - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.date_today }} - ${{ env.main_name }} - ${{ env.repository_name }} - JAR generated
          path: build/libs/*.jar
